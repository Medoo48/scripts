#!/bin/sh

mkdir res 2>/dev/null

# Перетворити JSON-файл на звичайний текст
if [ $1 == 'json' ]; then
	shift #json
	for arg in "$@"
	do
		text=$(cat $arg | sed -E "s/^.*: \"//g;
					  s/^  \{//g;
					  s/^  },//g;
					  s/^  }//g;
					  s/^\[//g;
					  s/^]//g;
					  s/\"$//g")

		text=$(sed -E -z 's/\n+/\n/g' <<< "$text")

		echo "$text" > res/$arg.text.txt
	done
	exit 0
fi

#Загальні регулярні вирази заміни тексту для всіх творів
#На https://regexr.com/ можна зручно їх проєктувати/перевіряти
patterns=(
		#зайві символи
		'\s{2,}/ '
		',?” /, —'
		'- /— '
		'(^\.\.)\. -/, —'
		'^ —/—'
		'" / — '
		'— —/—'
		' "/ «'
		'”/»'
		'»$/'

		#початок прямої мови
		'^"/— '
		'^-/—'
		'“/— '

		#слова автора
		': —/, — '
		': «/, — '
		'\." /, — '
		'\. «/. — '
		
		#цитати
		'‘/«'
		'"/»'
		'([^,]) — ((\w+) ){1,6}—/\1 «\3»'
		'(«(\w+ ){1,6})—/\1»'
		' »/»'
		'» (\.|,|\?|!)/»\1'

		#стилістика
		'и і /и й ' # допомагати і підтримувати -> допомагати й підтримувати
		'і і /і й '
		'(а|я|о|у|ю|е|є|и|і|ї) і (а|я|о|у|ю|е|є|и|і|ї)/\1 й \2'
	#	'й (й|ї|є|я|ю)/і \1'
		' в (.в)/ у \1'
		' (\w+)(-Сіті|-сіті|-місто)/ місто \1'

		#сміття
		'(Э|э|Ы|ы|Ё|ё|Ъ|ъ)/@' # збій у перекладі, перевірте увесь рядок
		
		#інше
		'\s{2,}/ ' # знову
		'^ \[/\t[' # слова перекладача
		'…/...'
		'((Розділ|Глава|Chapter) [0-9]+):/\1.'
		'((Розділ|Глава|Chapter).*)/\n\1\n'

		#для тестів
		#'(\w+ ?)+/word'
)

# Не використовувати загальні регулярні вирази
if [ $1 == '-c' ]; then
	shift
	patterns=()
fi


multi_line_patterns=(	
		'\n+/\n'
)

# Додаткові правила заміни окремого твору
# На кожному рядку регулярний вираз
cin_path=''

if [ -f 'cin.txt' ]; then
	cin_path='./cin.txt'
elif [ -f '../cin.txt' ]; then
	cin_path='../cin.txt'
fi

if [ -n "$cin_path" ]; then
	while IFS="" read -r exp
	do
		if [ -z "$exp" ]; then
			continue
		fi

		patterns+=("$exp")
	done < $cin_path
fi

chg_exp=''
# Збираємо правила перетворень в один вираз щоб прискорити виконання
for exp in "${patterns[@]}"; do
	chg_exp="${chg_exp}s/$exp/g;"
done

# Заміна тексту у файлах використовуючи регулярні вирази
for arg in "$@"
do
	text=$(cat $arg)
	
	for exp in "${multi_line_patterns[@]}"; do
                text=$(sed -E -z "s/$exp/g" <<< "$text")
        done

	text=$(sed -E "$chg_exp" <<< "$text")
	
        echo "$text" > res/$arg
done

