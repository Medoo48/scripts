#!/bin/sh

mkdir res 2>/dev/null

# Перетворити JSON-файл на звичайний текст
if [ $1 == 'json' ]; then
	shift #json
	for arg in "$@"
	do
		text=$(cat $arg | sed -E "s/^.*: \"//g;
					  s/^  \{//g;
					  s/^  },//g;
					  s/^  }//g;
					  s/^\[//g;
					  s/^]//g;
					  s/\"$//g")

		text=$(sed -E -z 's/\n+/\n/g' <<< "$text")

		echo "$text" > res/$arg.text.txt
	done
	exit 0
fi

# Оптимізувати кількість символів у файлах
if [ $1 == 'prep' ]; then
	shift #prep
	for arg in "$@"
	do
		text=$(cat $arg | sed -E "s/, /,/g;
					  s/, -/,-/g;
					  s/, —/,—/g;
					  s/\? /?/g;
					  s/! /!/g;
					  s/; /;/g")

		text=$(sed -E -z 's/\n+/\n/g' <<< "$text")

		echo "$text" > res/$arg.prep.txt
	done
	exit 0
fi


#Загальні регулярні вирази заміни тексту для всіх творів
#На https://regexr.com/ можна зручно їх проєктувати/перевіряти
patterns=(
		#зайві символи
		'\s{2,}/ '
		'\?\./?'
		',?” /, —'
		'- /— '
		'(^\.\.)\. -/, —'
		'^ —/—'
		'(^\.)" /» '
		'— —/—'
		' "/ «'
		'”/»'
		'’(\W)/»\1'
		'»$/'
		'\?,/?'
		'!,/!'

		#початок прямої мови
		'^"/— '
		'^-/—'
		'^“/— '
		'^«/— '
		' “/ — '

		#слова автора
		': —/, — '
		': «/, — '
		'\." /, — '
		
		#цитати
		'‘/«'
		'"/»'
		'([^,]) — ((\w+) ){1,6}—/\1 «\3»'
		#'(«(\w+ ){1,6})—/\1»' #Можливо викликає зникнення слів
		' »/»'
		'» (\.|,|\?|!)/»\1'

		#стилістика
		'і і /і й '
		'(а|я|о|у|ю|е|є|и|і|ї) і (а|я|о|у|ю|е|є|и|і|ї)/\1 й \2'
		' й (й|ї|є|я|ю)/ і \1'
		' у і/ в і' #Перед нейотованими голосними варто писати в
		'в б /в би ' #Після приголосної пишемо «би»
		'(и|і|ї) і,/\1 й,'

		' (зі|із) (а|я|о|у|ю|е|и|і|ї)/ з \2' # Перед голосною вживаємо з: «з» учасників
		
		'(а|я|о|у|ю|е|є|и|і|ї) би /\1 б ' # Після голосної пишемо «б»

		' в (в|ф|(б|д|з|ж|г|ґ|л|м|н|р|в|й|п|т|с|ц|ш|х|к|ф){2})/ у \1' # Перед словами, що починаються на в, ф або збігом приголосних із в, ф пишемо у: «у» свій

		#' у (і)/ в \1'# Перед нейотованими голосними варто писати в

		'(віце|пост|нуль|топ|поп|мега|міні|медіа|супер|псевдо|промо|відео|веб|демо)-(\w)/\1\2'

		'(\d) чоловік/\1 осіб'
		'(\d)\ (\d)/\1,\2'
		'(\d)\ (\d)/\1,\2'

		'якщо б /якби '
		'(\w) на ім(\W)я/\1, на ім\2я'
		'(П|п)о мірі/в міру'
		'в повній мірі/повною мірою'
		'будучи /бувши '
		'Якщо б/Якби'
		'У свою чергу/Своєю чергою'
		' парковки/ стоянки'
		' парковка/ стоянка'
		'помер раптовою смертю/раптово помер'
		'(Н|н)емає необхідності/\1ема потреби'
		'холостяка/парубка'
		'холостяк/парубок'
		'( — (сказа|відпові))(в|ла)/,\1\3'
		'найвірогід/найімовір'
		'в крайньому випадку/в крайньому разі'
		'в залежності від/залежно від'
		'священик/священник'
		' (\w+)(-Сіті|-сіті|-місто)/ місто \1'
		'проек/проєк' # чинний правопис
		'підніма/підійма'
		'безкоштовного/безплатного'
		'безкоштовну/безплатну'
		'безкоштовно/безплатно'
		'безкоштовне/безплатне'
		'безкоштовних/безплатних'
		'зарубіжному/закордонному'
		'вірогідності/ймовірності'
		#'вирішити будь-яку проблему'
		#'вирішив проблему/розв'язав проблему'
		#'вирішити цю проблему/розв'язати цю проблему'
		'незважаючи на /попри '
		'в достатній мірі/достатньою мірою'
		' не по собі/ ніяково'
		'зробив вигляд/удав'
		'у свою чергу/своєю чергою'
		'азіатс/азійс'
		'заживо/живцем'
		'більш складним/складнішим'
		'переключи(в|ла)/перемикну\1'
		'руки і ноги/руки та ноги'
		'Будучи/Бувши'
		' фойє / фоє '

		'папка/тека'
		'папку/теку'
	
		'щупальцями/мацаками'
		'щупальцях/мацаках'
		'щупальця/мацаки'
		'щупалець/мацаків'
		'щупальце/мацак'
	
		'віруючих/вірян'
		'віруючими/вірянами'
		'віруючим/вірянам'
		'віруючі/віряни'
		'віруючий/вірянин'
		'віруючою/вірянкою'
		'віруючого/вірянина'

		'загіпноти/загіпно'

		#сміття
		'(Э|э|Ы|ы|Ё|ё|Ъ|ъ)/@' # збій у перекладі, перевірте увесь рядок
		
		#інше
		',,/,'
		'—(\w)/— \1'
		'\s{2,}/ ' # знову
		'^ \[/\t[' # слова перекладача
		'…/...'

		'((Розділ|Глава|Chapter) [0-9]+):/\1.'
		'((Розділ|Глава|Chapter).*)/\n\1\n'

		#для тестів
		#'(\w+ ?)+/word'
)

# Не використовувати загальні регулярні вирази
if [ $1 == '-c' ]; then
	shift
	patterns=()
fi


multi_line_patterns=(	
		'\n+/\n'
)

# Додаткові правила заміни окремого твору
# На кожному рядку регулярний вираз
cin_path=''

if [ -f 'cin.txt' ]; then
	cin_path='./cin.txt'
elif [ -f '../cin.txt' ]; then
	cin_path='../cin.txt'
fi

if [ -n "$cin_path" ]; then
	while IFS="" read -r exp
	do
		if [ -z "$exp" ]; then
			continue
		fi

		patterns+=("$exp")
	done < $cin_path
fi

text=""
log_used_patterns () {
	for exp in "${patterns[@]}"; do
		echo "use $exp"
		text=$(sed -E "s/$exp/g" <<< "$text")
	done
}

#для тестів
debug=0

chg_exp=''
# Збираємо правила перетворень в один вираз щоб прискорити виконання
if [ $debug -eq 0 ]; then
	for exp in "${patterns[@]}"; do
		chg_exp="${chg_exp}s/$exp/g;"
	done
fi


# Заміна тексту у файлах використовуючи регулярні вирази
for arg in "$@"
do
	text=$(cat $arg)
	
	for exp in "${multi_line_patterns[@]}"; do
                text=$(sed -E -z "s/$exp/g" <<< "$text")
        done

	if [ $debug -eq 0 ]; then
		text=$(sed -E "$chg_exp" <<< "$text")
	else
		log_used_patterns
	fi
		
        echo "$text" > res/$arg
done

